{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","className","src","alt","Component","MemeGenerator","state","topText","bottomText","randimg","all_memes","handleChange","bind","RandomImage","fetch","then","response","json","datas","meme","data","memes","setState","event","target","name","value","this","preventDefault","count","Math","floor","random","RandMemeImg","url","onSubmit","type","placeholder","onChange","onClick","App","ReactDom","render","document","getElementById"],"mappings":"2KAkBeA,E,4JAfb,WACE,OACE,8BACE,iCACE,qBACEC,UAAU,OACVC,IAAI,kEACJC,IAAI,oB,GARKC,a,eCyENC,E,kDAxEb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,QAAS,GACTC,WAAY,GACZC,QAAS,mCACTC,UAAW,IAEb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBATP,E,qDAWd,WAAqB,IAAD,OAClBE,MAAM,qCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IAAQC,EAASD,EAAME,KAAKC,MAApBF,KACR,EAAKG,SAAS,CAAEZ,UAAWS,S,0BAGjC,SAAaI,GACX,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdC,KAAKL,SAAL,eACGG,EAAOC,M,yBAGZ,SAAYH,GAAQ,IAAD,OACjBA,EAAMK,iBACNd,MAAM,qCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IAAMW,EAAQC,KAAKC,MAAsB,GAAhBD,KAAKE,UACxBC,EAAcf,EAAME,KAAKC,MAAMQ,GAAOK,IAC5C,EAAKZ,SAAS,CAAEb,QAASwB,S,oBAG/B,WACE,OACE,gCACE,8DACA,gCACE,uBAAME,SAAUR,KAAKd,YAArB,UACE,uBACEuB,KAAK,OACLX,KAAK,UACLY,YAAY,WACZX,MAAOC,KAAKrB,MAAMC,QAClB+B,SAAUX,KAAKhB,eAEjB,uBACEyB,KAAK,OACLX,KAAK,aACLY,YAAY,cACZX,MAAOC,KAAKrB,MAAME,WAClB8B,SAAUX,KAAKhB,eAEjB,uBACA,uBACA,wBAAQV,UAAU,MAAMsC,QAASZ,KAAKd,YAAtC,yBAIF,gCACE,oBAAIZ,UAAU,SAAd,SAAwB0B,KAAKrB,MAAMC,UACnC,qBAAKL,IAAKyB,KAAKrB,MAAMG,QAASN,IAAI,aAClC,oBAAIF,UAAU,YAAd,SAA2B0B,KAAKrB,MAAME,0B,GAjEtBJ,aCEb,SAASoC,IACtB,OACE,sBAAKvC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OCJNwC,IAASC,OACP,8BACE,cAACF,EAAD,MAEFG,SAASC,eAAe,U","file":"static/js/main.af5f1452.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../src/styles.css\";\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <img\r\n            className=\"head\"\r\n            src=\"https://cdn.moreappslike.com/com.memegenpro.snapmeme-header.png\"\r\n            alt=\"memepng\"\r\n          />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import \"../src/styles.css\";\r\nimport React, { Component } from \"react\";\r\nclass MemeGenerator extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      topText: \"\",\r\n      bottomText: \"\",\r\n      randimg: \"https://i.imgflip.com/26jxvz.jpg\",\r\n      all_memes: []\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.RandomImage = this.RandomImage.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((response) => response.json())\r\n      .then((datas) => {\r\n        const { meme } = datas.data.memes;\r\n        this.setState({ all_memes: meme });\r\n      });\r\n  }\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  RandomImage(event) {\r\n    event.preventDefault();\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((response) => response.json())\r\n      .then((datas) => {\r\n        const count = Math.floor(Math.random() * 99);\r\n        const RandMemeImg = datas.data.memes[count].url;\r\n        this.setState({ randimg: RandMemeImg });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>WELCOME TO MEME GENERATOR !!</h1>\r\n        <div>\r\n          <form onSubmit={this.RandomImage}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"topText\"\r\n              placeholder=\"Top Text\"\r\n              value={this.state.topText}\r\n              onChange={this.handleChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"bottomText\"\r\n              placeholder=\"Bottom Text\"\r\n              value={this.state.bottomText}\r\n              onChange={this.handleChange}\r\n            />\r\n            <br />\r\n            <br />\r\n            <button className=\"btn\" onClick={this.RandomImage}>\r\n              Generate\r\n            </button>\r\n          </form>\r\n          <div>\r\n            <h1 className=\"toptxt\">{this.state.topText}</h1>\r\n            <img src={this.state.randimg} alt=\"meme-img\" />\r\n            <h1 className=\"bottomtxt\">{this.state.bottomText}</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemeGenerator;\r\n","import \"./styles.css\";\nimport Header from \"./Header\";\nimport MemeGenerator from \"./MemeGenerator\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MemeGenerator />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}